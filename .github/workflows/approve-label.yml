name: Approve Label Trigger
on: 
  issues:
    types: 
      - labeled
jobs:
  parseNewIssue:
    if: contains(github.event.label.name, 'new model')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # setup python
      - name: setup python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.10"

      # setup conda
      - name: add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: source conda
        run: source $CONDA/etc/profile.d/conda.sh
      - name: install dependencies through conda
        run: |
          source activate
          conda init
          conda install -c conda-forge pygithub filetype orcid habanero

      # parse issue
      - name: parse issue
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORCID_ID: ${{ secrets.ORCID_ID }}
          ORCID_PW: ${{ secrets.ORCID_PW }}
        run: |
          python3 .github/scripts/parse_issue.py

  createNewRepo:
    if: contains(github.event.label.name, 'approved')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # setup python
      - name: setup python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: "3.10"

      # setup conda
      - name: add conda to system path
        run: echo $CONDA/bin >> $GITHUB_PATH
      - name: source conda
        run: source $CONDA/etc/profile.d/conda.sh
      - name: install dependencies through conda
        run: |
          source activate
          conda init
          conda install -c conda-forge pygithub filetype orcid habanero

      # create the model repo from the template
      - name: create model repo
        id: create-model-repo
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          OWNER: hvidy
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          TEMPLATE: hvidy/mate_template
          FLAGS: --public
        run: |
          REPO_NAME=$(python3 .github/scripts/generate_identifier.py)
          gh repo create ${OWNER}/${REPO_NAME} --template $TEMPLATE $FLAGS
          echo "repo_name=${REPO_NAME}" >> $GITHUB_OUTPUT

      # parse metadata and copy to repo
      - name: copy metadata
        id: copy-metadata
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          OWNER: hvidy
          REPO: ${{ steps.create-model-repo.outputs.repo_name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          python3 .github/scripts/copy_metadata.py

      # copy files to the new repo
      - name: copy files
        id: copy-files
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          OWNER: hvidy
          REPO: ${{ steps.create-model-repo.outputs.repo_name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          python3 .github/scripts/copy_files.py
